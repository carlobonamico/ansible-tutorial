---
- hosts: pizzamatic-simple
  user: manager
  sudo: yes
  
  vars_files:
    - variables.yml

  tasks:
  - name: apache must be present
    apt: pkg=apache2
  
  - name: apache must be running
    service: name=apache2 state=started
    
    #common
      - name: Checking Service user 
    action: command echo service user ${user}
    #connection: local
    tags: 
     - setup
     
  - name: Print remote rsa file path    
    action: command echo ${remote_key_rsa}
    #connection: local
    tags: 
      - setup
      - ssh   
     
  - name: create ssh-key-file user
    action: user name=${user} generate_ssh_key=yes ssh_key_file=.ssh/${user}_rsa ssh_key_bits=2048
    tags: 
      - setup
      - ssh
      
#  - name: copy ssh-key-file from remote (1/2)...
#    action: fetch src=${remote_key_rsa} dest=${local_key_folder} fail_on_missing=yes
#    tags: 
#     - setup
#      - ssh

#  - name: copy ssh-key-file from remote (2/2)...
#    action: fetch src=${remote_key_rsa_pub} dest=${local_key_folder} fail_on_missing=yes
#    tags: 
#      - setup
#      - ssh
  
  - name: Print local rsa file path    
    action: command echo "${local_key_folder}/${inventory_hostname}${remote_key_rsa}"
    #connection: local
    tags: 
      - setup
      - ssh

#  - name: authorize ssh-key
#    action: authorized_key user=${user} key='$FILE(${local_key_folder}/${inventory_hostname}/${remote_key_rsa_pub})' 
#    tags: 
#      - setup
#      - ssh
    
    
    #postgresql
    
      - name: STARTING POSTGRES ROLE
    action: command echo postgres role
    #connection: local
    tags: 
     - postgres
  
  - name: Install required libs
    action: apt pkg=libpq-dev update_cache=yes
    tags: 
     - postgres

  - name: Fix Issue No 1751
    action: apt pkg=python-software-properties state=latest
    tags: 
     - postgres

#  - name: Add Postgres PPA
#    action: apt_repository repo=ppa:pitti/postgresql
#    tags: 
#     - postgres

  - name: Install PostgreSQL 9.2
    action: apt pkg=$item update_cache=no
    with_items:
        - postgresql-9.2
        - python-psycopg2
    tags:
     - postgres

  - name: Stop PostgreSQL service
    action: service name=postgresql state=stopped
    tags: 
     - postgres

  - name: Create PostgreSQL data directory
    action: file dest=${data_directory} owner=postgres group=postgres mode=0700 state=directory
    tags: 
     - postgres

  - name: Copy PostgreSQL data to new path
    action: shell cp -R /var/lib/postgresql/9.2/main/ ${data_directory}/ && chown -R postgres. ${data_directory}/
    tags: 
     - postgres

  - name: Set new PostgreSQL data directory
    action: lineinfile dest=/etc/postgresql/9.2/main/postgresql.conf state=present regexp="data_directory = " line="data_directory = '${data_directory}/main'"
    tags: 
     - postgres

  - name: Start PostgreSQL service
    action: service name=postgresql state=restarted
    tags: 
     - postgres

  - name: Set postgres user password
    action: shell /bin/echo "ALTER USER postgres WITH PASSWORD '${db_login_pwd}';" | /usr/bin/sudo -u postgres /usr/bin/psql
    tags: 
     - postgres

  - name: Create database user
    action: postgresql_user login_host=localhost login_password=${db_login_pwd} user=${db_user} password=${db_pwd}
    tags: 
     - postgres

  - name: Create database
    action: postgresql_db login_host=localhost login_password=${db_login_pwd} db=${db_name} owner=${db_user} state=present
    tags: 
     - postgres

    
    
    #jdk
    
  - name: STARTING JDK7 ROLE
    action: command echo jdk7 role
    #connection: local
    tags: 
     - jdk7

  - name: Create temp directory
    action: file dest=./setup_jdk state=directory

#  - name: Push JDK (TEST)
#    action: copy src=./jdk-7u25-linux-x64.tar.gz dest=./setup_jdk/jdk-7u25-linux-x64.tar.gz mode=0755

  - name: Download ${jdk_dl_url}
    action: shell wget --header "${cookie}" ${jdk_dl_url} -P ./setup_jdk

  - name: Unzip JDK
    action: shell tar xzvf ./setup_jdk/jdk-7u??-linux-x64.tar.gz -C ./setup_jdk/

  - name: Check install directory
    action: "file dest=/usr/lib/jvm/ state=directory"

  - name: Install JDK
    action: shell mv ./setup_jdk/jdk1.7.0_?? /usr/lib/jvm/jdk1.7.0

  - name: Set JDK as default (1/7)
    action: shell update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0/bin/java 1

  - name: Set JDK as default (2/7)
    action: shell update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0/bin/javac 1

  - name: Set JDK as default (3/7)
    action: shell update-alternatives --install /usr/bin/javaws javaws /usr/lib/jvm/jdk1.7.0/bin/javaws 1

  - name: Set JDK as default (4/7)
    action: shell update-alternatives --set java /usr/lib/jvm/jdk1.7.0/bin/java

  - name: Set JDK as default (5/7)
    action: shell update-alternatives --set javac /usr/lib/jvm/jdk1.7.0/bin/javac

  - name: Set JDK as default (6/7)
    action: shell update-alternatives --set javaws /usr/lib/jvm/jdk1.7.0/bin/javaws

  - name: Set JDK as default (7/7)
    action: copy src=./java.sh dest=/etc/profile.d/java.sh mode=0755

  - name: Delete temp directory
    action: shell rm -R ./setup_jdk/    
    
    #tomcat
    
    
      - name: STARTING TOMCAT ROLE
    action: command echo tomcat role
    #connection: local
    tags: 
     - tomcat


  - name: Create tomcat directory
    action: "file dest=/home/${service.user}/srv/ state=directory"
    tags: 
      - tomcat

  - action: file dest=./setup state=directory

  - name: Install unzip
    action: apt pkg=unzip update_cache=yes

  - action: get_url url=http://mirror.nohup.it/apache/tomcat/tomcat-7/v${tomcat-version}/bin/apache-tomcat-${tomcat-version}.zip dest=./setup/tomcat-${tomcat-version}.zip 
    tags: 
      - tomcat

  - name: Unzip Tomcat
    action: "shell unzip ./setup/tomcat-${tomcat-version}.zip -d /home/${service.user}/srv/ && chown -R ${service.user}. /home/${service.user}/srv creates=/home/${service.user}/srv/apache-tomcat-${tomcat-version}"
    tags: 
      - tomcat
    
  - action: template src=./setenv.sh.j2 dest=/home/${service.user}/srv/apache-tomcat-${tomcat-version}/bin/setenv.sh mode=755
    tags: 
      - tomcat
      
  - name: Tomcat permissions
    action: "shell chmod 755 /home/${service.user}/srv/apache-tomcat-${tomcat-version}/bin/*.sh"
    tags: 
      - tomcat
 
    
  - action: template src=./tomcat7.j2 dest=/etc/init.d/tomcat7 owner=root mode=0755
    tags: 
      - fast
 #     - hostname
      - config
      - tomcat

  - action: template src=./server.xml.j2 dest=/home/${service.user}/srv/apache-tomcat-${tomcat-version}/conf/server.xml mode=644
    tags: 
      - tomcat

  - name: Register Tomcat service as default autostart
    action: "shell update-rc.d tomcat7 defaults"
  
  - action: service name=tomcat7 state=restarted
    tags: 
      - tomcat
  
#TODO usare la reset  - action: command /usr/sbin/ufw deny to any port 8080 #TODO solo da frontend
#  - action: command /usr/sbin/ufw allow from 192.168.1.0/24 to any port 8080 #TODO solo da VLAN frontend
#  - action: command /usr/sbin/ufw allow to any port 8081 #TODO SSL

  #TODO non da tutti ma solo dal frontend
  



  
  
    
    
    #apache
  - name: Starting apache role
    action: command echo apache role
    tags: 
     - setup

  - name: Install Apache
    action: apt pkg=apache2
    tags: 
      - apache2


  - name: copy ssl file... (1/2)  
    action: copy src=./secure/${service.name}.crt dest=/etc/ssl/certs/${service.name}.crt
    tags: 
      - setup
      - ssl
  
  - name: ...copy ssl file (2/2)
    action: copy src=./secure/${service.name}.key dest=/etc/ssl/private/${service.name}.key
    tags:
      - setup
      - ssl
      
  - name: Create www folder
    action: file dest=/home/${service.name}/srv/www state=directory owner=${service.user}
    tags: 
      - apache2

  - name: Apache | Disable the default site
    action: command a2dissite default
    tags: 
      - apache2

  - name: Apache | Disable the default ssl site
    action: command a2dissite default-ssl
    tags: 
      - apache2

  - name: Install new site
    action: template src=./service-ssl.j2 dest=/etc/apache2/sites-available/${service.name}-ssl
    tags: 
      - apache2

  - name: Apache | Enable our new site
    action: command a2ensite ${service.name}-ssl
    tags: 
      - apache2

  - name: Apache | Enable ssl and proxy
    action: command a2enmod proxy proxy_http ssl deflate rewrite headers expires
    tags: 
      - apache2

  - action: command /usr/sbin/ufw deny to any port 80

  - action: command /usr/sbin/ufw allow to any port 443

  - tags: fast
    action: service name=apache2 state=restarted
    tags: 
      - apache2
    